name: Deploy CDK

on:
  workflow_dispatch:
    inputs:
      action:
        description: "CDK action Choose the action: deploy or destroy"
        required: true
        default: "deploy"
        type: choice
        options:
          - deploy
          - destroy

permissions:
  id-token: write # Allow the workflow to request OIDC tokens.
  contents: read # Allow the workflow to read repository contents.

jobs:
  cdk-deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    defaults:
      run:
        working-directory: genai # Set the working directory to genai if it's a subdirectory
    env:
      ACTION: ${{ github.event.inputs.action || 'deploy' }} # Action input (deploy or destroy)

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # Step 2: Set up AWS credentials from IAM Role (ensure IAM role has necessary permissions)
      - name: Configure AWS credentials from IAM Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }} # Ensure you have AWS_ROLE_ARN in GitHub Secrets
          aws-region: ${{ secrets.AWS_REGION }} # Ensure you have AWS_REGION in GitHub Secrets

      # Step 3: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Specify the Node.js version you want to use

      # Step 4: Install dependencies and CDK
      - name: Install CDK and dependencies
        run: |
          npm ci
          npm install -g aws-cdk

      # Optional: Step 5 - Load environment variables from .env
      # - name: Load environment variables from .env
      #   run: |
      #     if [ -f .env ]; then
      #       export $(cat .env | xargs)
      #     fi

      # Step 6: CDK Bootstrapping (if needed)
      - name: CDK Bootstrap (if needed)
        run: cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }}

      # Step 7: CDK Synth (synthesize CloudFormation templates)
      - name: CDK Synth
        run: |
          npx cdk synth

      # Step 8: CDK Deploy or Destroy
      - name: CDK Deploy or Destroy
        run: |
          if [ "$ACTION" == "deploy" ]; then
            npx cdk deploy --require-approval never
          elif [ "$ACTION" == "destroy" ]; then
            npx cdk destroy --require-approval never --force  # Added --force flag
          else
            echo "Invalid action: $ACTION"
            exit 1
          fi
